
# yesno: prompts $1 to stdin and returns 0 if user answers yes, else returns 1.
# The default (just hitting <enter>) is specified by $2.
# $1=prompt (required),
# $2=default (optional): 'y' or 'n' with 'n' being the default default.
function yesno() {

  local prompt="$1"; local default="${2:-n}" # default is no
  local yn

   while true ; do
       read -p "$prompt" yn
       case $yn in
         [Yy])         return 0;;
         [Yy][Ee][Ss]) return 0;;
         [Nn])         return 1;;
         [Nn][Oo])     return 1;;
         '') # default
           [[ "$default" != 'y' ]] && return 1 || return 0
         ;;
         *) # unexpected...
           echo "Expecting a yes/no response, not \"$yn\""
         ;;
       esac
   done
}

# check_ssh: verify that the user can passwordless ssh to the passed-in list of
# nodes. Returns 1 on errors.
# Args: $1  = localhost
#       $2+ = list of nodes.
function check_ssh() {

  local localhost="$1"; shift
  local nodes="$@"
  local node; local err; local errcnt=0

  for node in $nodes; do
      [[ "$node" == "$localhost" ]] && continue # skip
      ssh -q $node exit
      err=$?
      if (( err != 0 )) ; then
        echo "ERROR: cannot connect to node $node"
        ((errcnt++))
      fi
  done

  (( errcnt > 0 )) && return 1
  return 0
}

# vol_exists: invokes gluster vol info to see if VOLNAME exists. Returns 1 on
# errors. 
# Args:
#   $1=volume name,
#   $2=any storage node where gluster cli can be run.
function vol_exists() {

  local vol="$1"; local rhs_node="$2"

  ssh $rhs_node "gluster volume info $VOLNAME >& /dev/null"
  (( $? != 0 )) && return 1
  return 0
}

